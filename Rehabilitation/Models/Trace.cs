//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rehabilitation.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class Trace
    {
        public int TraceId { get; set; }
        [Display(Name = "Bệnh nhân")]
        public string PatientId { get; set; }
        [Display(Name = "Nội dung luyện tập")]
        public string Exercise { get; set; }
        [Display(Name = "Thời gian")]
        public System.DateTime Time { get; set; }
        [Display(Name = "Ăn trước luyện tập")]
        public Nullable<int> Eating_B { get; set; }
        [Display(Name = "Ăn sau luyện tập")]
        public int Eating_A { get; set; }
        [Display(Name = "Vệ sinh đầu mặt trước luyện tập")]
        public Nullable<int> Grooming_B { get; set; }
        [Display(Name = "Vệ sinh đầu mặt sau luyện tập")]
        public int Grooming_A { get; set; }
        [Display(Name = "Tắm trước luyện tập")]
        public Nullable<int> Bathing_B { get; set; }
        [Display(Name = "Tắm sau luyện tập")]
        public int Bathing_A { get; set; }
        [Display(Name = "Mặc áo trước luyện tập")]
        public Nullable<int> DressingUpperBody_B { get; set; }
        [Display(Name = "Mắc áo sau luyện tập")]
        public int DressingUpperBody_A { get; set; }
        [Display(Name = "Mặc quần trước luyện tập")]
        public Nullable<int> DressingLowerBody_B { get; set; }
        [Display(Name = "Mặc quần sau luyện tập")]
        public int DressingLowerBody_A { get; set; }
        [Display(Name = "Đi vệ sinh trước luyện tập")]
        public Nullable<int> Toileting_B { get; set; }
        [Display(Name = "Di vệ sinh sau luyện tập")]
        public int Toileting_A { get; set; }
        [Display(Name = "Kiểm soát bàng quang trước luyện tập")]
        public Nullable<int> BladderManagement_B { get; set; }
        [Display(Name = "Kiểm soát bàng quang sau luyện tập")]
        public int BladderManagement_A { get; set; }
        [Display(Name = "Kiểm soát đường ruột trước luyện tập")]
        public Nullable<int> BowelManagement_B { get; set; }
        [Display(Name = "Kiểm soát đường ruột sau luyện tập")]
        public int BowelManagement_A { get; set; }
        [Display(Name = "Địch chuyển: giường sang ghế, xe lăn trước luyện tập")]
        public Nullable<int> TransferBedChairWheelchair_B { get; set; }
        [Display(Name = "Dịch chuyển: giường sang ghế, xe lăn sau luyện tập")]
        public int TransferBedChairWheelchair_A { get; set; }
        [Display(Name = "Dịch chuyển: Ở phòng vệ sinh trước luyện tập")]
        public Nullable<int> TransferToilet_B { get; set; }
        [Display(Name = "Dịch chuyển: Ở phòng vệ sinh sau luyện tập")]
        public int TransferToilet_A { get; set; }
        [Display(Name = "Dịch chuyển: bồn tắm/ buồng tắm vòi sen trước luyện tập")]
        public Nullable<int> TransferTubShower_B { get; set; }
        [Display(Name = "Dịch chuyển: bồn tắm/ buồng tắm vòi sen sau luyện tập")]
        public int TransferTubShower_A { get; set; }
        [Display(Name = "Đi/Di chuyển bằng xe lăn trước luyện tập")]
        public Nullable<int> WalkOrWheelchair_B { get; set; }
        [Display(Name = "Đi/Di chuyển bằng xe lăn sau luyện tập")]
        public int WalkOrWeelchair_A { get; set; }
        [Display(Name = "Lên xuống cầu thang trước luyện tập")]
        public Nullable<int> Stairs_B { get; set; }
        [Display(Name = "Lên xuống cầu thang sau luyện tập")]
        public int Stairs_A { get; set; }
        [Display(Name = "Hiểu trước luyện tập")]
        public Nullable<int> Compreshension_B { get; set; }
        [Display(Name = "Hiểu sau luyện tập")]
        public int Compreshension_A { get; set; }
        [Display(Name = "Diễn đạt trước luyện tập")]
        public Nullable<int> Expression_B { get; set; }
        [Display(Name = "Diễn đạt sau luyện tập")]
        public int Expression_A { get; set; }
        [Display(Name = "Tương tác xã hội trước luyện tập")]
        public Nullable<int> SocialInteraction_B { get; set; }
        [Display(Name = "Tương tác xã hội sau luyện tập")]
        public int SocialInteraction_A { get; set; }
        [Display(Name = "Giải quyết vấn đề trước luyện tập")]
        public Nullable<int> ProblemSolving_B { get; set; }
        [Display(Name = "Giải quyết vấn đề sau luyện tập")]
        public int ProblemSolving_A { get; set; }
        [Display(Name = "Trí nhớ trước luyện tập")]
        public Nullable<int> Memory_B { get; set; }
        [Display(Name = "Trí nhớ sau luyện tập")]
        public int Memory_A { get; set; }

        [Display(Name = "Điểm tiểu mục Vận động, di chuyển")]
        public Nullable<int> MotorDomain_B
        {
            get
            {
                return Eating_B + Grooming_B + Bathing_B + DressingLowerBody_B + DressingUpperBody_B + Toileting_B + BladderManagement_B + BowelManagement_B +
                    TransferBedChairWheelchair_B + TransferToilet_B + TransferTubShower_B + WalkOrWheelchair_B + Stairs_B;
            }
        }
        [Display(Name = "Điểm tiểu mục Nhận thức")]
        public Nullable<int> CognitiveDomain_B
        {
            get
            {
                return Compreshension_B + Expression_B + SocialInteraction_B + ProblemSolving_B + Memory_B;
            }
        }
        [Display(Name = "Điểm FIM trước buổi tập")]
        public Nullable<int> Total_B
        {
            get
            {
                return MotorDomain_B + CognitiveDomain_B;
            }
        }

        [Display(Name = "Điểm tiểu mục Vận động, di chuyển")]
        public int MotorDomain_A
        {
            get
            {
                return Eating_A + Grooming_A + Bathing_A + DressingLowerBody_A + DressingUpperBody_A + Toileting_A + BladderManagement_A + BowelManagement_A +
                    TransferBedChairWheelchair_A + TransferToilet_A + TransferTubShower_A + WalkOrWeelchair_A + Stairs_A;
            }
        }
        [Display(Name = "Điểm tiểu mục Nhận thức")]
        public int CognitiveDomain_A
        {
            get
            {
                return Compreshension_A + Expression_A + SocialInteraction_A + ProblemSolving_A + Memory_A;
            }
        }
        [Display(Name = "Điểm FIM sau buổi tập")]
        public int Total_A
        {
            get
            {
                return MotorDomain_A + CognitiveDomain_A;
            }
        }

        public string EatingDifference { get
            {
                return Eating_B.HasValue ? (Eating_A - Eating_B.Value).ToString("+#;-#;0") : "";
            } }

        public string GroomingDifference
        {
            get
            {
                return Grooming_B.HasValue ? (Grooming_A - Grooming_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string BathingDifference
        {
            get
            {
                return Bathing_B.HasValue ? (Bathing_A - Bathing_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string DressingUpperBodyDifference
        {
            get
            {
                return DressingUpperBody_B.HasValue ? (DressingUpperBody_A - DressingUpperBody_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string DressingLowerBodyDifference
        {
            get
            {
                return DressingLowerBody_B.HasValue ? (DressingLowerBody_A - DressingLowerBody_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string ToiletingDifference
        {
            get
            {
                return Toileting_B.HasValue ? (Toileting_A - Toileting_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string BladderManagementDifference
        {
            get
            {
                return BladderManagement_B.HasValue ? (BladderManagement_A - BladderManagement_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string BowelManagementDifference
        {
            get
            {
                return BowelManagement_B.HasValue ? (BowelManagement_A - BowelManagement_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string TransferBedChairWheelchairDifference
        {
            get
            {
                return TransferBedChairWheelchair_B.HasValue ? (TransferBedChairWheelchair_A - TransferBedChairWheelchair_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string TransferToiletDifference
        {
            get
            {
                return TransferToilet_B.HasValue ? (TransferToilet_A - TransferToilet_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string TransferTubShowerDifference
        {
            get
            {
                return TransferTubShower_B.HasValue ? (TransferTubShower_A - TransferTubShower_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string WalkOrWheelchairDifference
        {
            get
            {
                return WalkOrWheelchair_B.HasValue ? (WalkOrWeelchair_A - WalkOrWheelchair_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string StairsDifference
        {
            get
            {
                return Stairs_B.HasValue ? (Stairs_A - Stairs_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string CompreshensionDifference
        {
            get
            {
                return Compreshension_B.HasValue ? (Compreshension_A - Compreshension_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string ExpressionDifference
        {
            get
            {
                return Expression_B.HasValue ? (Expression_A - Expression_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string SocialInteractionDifference
        {
            get
            {
                return SocialInteraction_B.HasValue ? (SocialInteraction_A - SocialInteraction_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string ProblemSolvingDifference
        {
            get
            {
                return ProblemSolving_B.HasValue ? (ProblemSolving_A - ProblemSolving_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string MemoryDifference
        {
            get
            {
                return Memory_B.HasValue ? (Memory_A - Memory_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string MotorDomainDifference
        {
            get
            {
                return MotorDomain_B.HasValue ? (MotorDomain_A - MotorDomain_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string CognitiveDomainDifference
        {
            get
            {
                return CognitiveDomain_B.HasValue ? (CognitiveDomain_A - CognitiveDomain_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public string TotalDifference
        {
            get
            {
                return Total_B.HasValue ? (Total_A - Total_B.Value).ToString("+#;-#;0") : "";
            }
        }

        public virtual Patient Patient { get; set; }
    }
}
